              Assignment 2
Section 1: Error-Driven Learning in Java

Snippet 1: 
 
public class Main { 
    public void main(String[] args) { 
        System.out.println("Hello, World!"); 
    } 
} 
Error: Main method is not static in class Main, please define the main method as:
   public static void main(String[] args)

Correct Code :
public class Main { 
    public static void main(String[] args) {      // need to write static
        System.out.println("Hello, World!"); 
    } 
} 





Snippet 2: 
 
public class Main { 
    static void main(String[] args) { 
        System.out.println("Hello, World!"); 
    } 
}

Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

Correct Code :
public class Main { 
  public static void main(String[] args) {      // we need to write public
        System.out.println("Hello, World!"); 
    } 
}





Snippet 3:  
public class Main { 
    public static int main(String[] args) { 
        System.out.println("Hello, World!"); 
        return 0; 
    } 

ERROR!
/tmp/5Xa5vrcW1z/Main.java:5: error: reached end of file while parsing
    } 
    ^
1 error
Error: Main method must return a value of type void in class Main, please 
define the main method as:
   public static void main(String[] args)       
 error: incompatible types: unexpected return value
        return 0;
               ^


Correct Code :
public class Main { 
    public static void main(String[] args) {        //  we need to write void main
        System.out.println("Hello, World!"); 
        return ; 
    } 
}





Snippet 4:  
public class Main { 
    public static void main() { 
        System.out.println("Hello, World!"); 
    } 
} 

Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application


Correct Code :
public class Main { 
    public static void main(String[] args) {       // we need to writeString [] args
        System.out.println("Hello, World!"); 
    } 
} 





Snippet 5:  
public class Main { 
    public static void main(String[] args) { 
        System.out.println("Main method with String[] args"); 
    } 
    public static void main(int[] args) { 
        System.out.println("Overloaded main method with int[] args"); 
    } 
} 

output we getting after running the code : Main method with String[] args

Correct Code : ??




Snippet 6:  
public class Main { 
    public static void main(String[] args) { 
        int x = y + 10; 
        System.out.println(x); 
    } 
} 

error : int x = y + 10; 
                ^
  symbol:   variable y
  location: class Main
1 error


Correct Code :public class Main { 
    public static void main(String[] args) { 
       int y=5;             // we need to given the value of y = ...
        int x = y + 10; 
        System.out.println(x); 
    } 
} 
 


Snippet 7:  
public class Main { 
    public static void main(String[] args) { 
        int x = "Hello"; 
        System.out.println(x); 
    } 
} 

error: incompatible types: String cannot be converted to int
        int x = "Hello"; 
                ^
1 error


Correct Code : public class Main { 
    public static void main(String[] args) { 
        String x = "Hello";       // we need to write String
        System.out.println(x); 
    } 
} 






 
Snippet 8:  
public class Main { 
    public static void main(String[] args) { 
        System.out.println("Hello, World!" 
    } 
} 

error: ')' or ',' expected
        System.out.println("Hello, World!" 
                                          ^

Correct Code :public class Main { 
    public static void main(String[] args) { 
        System.out.println("Hello, World!" );
    } 
} 





 
Snippet 9:  
public class Main { 
    public static void main(String[] args) { 
        int class = 10; 
        System.out.println(class); 
    } 
} 

ERROR!
/tmp/SRtqVvGud1/Main.java:3: error: not a statement
        int class = 10; 
        ^
ERROR!
/tmp/SRtqVvGud1/Main.java:3: error: ';' expected
        int class = 10; 
           ^
ERROR!
/tmp/SRtqVvGud1/Main.java:3: error: <identifier> expected
        int class = 10; 
                 ^
ERROR!
/tmp/SRtqVvGud1/Main.java:4: error: illegal start of expression
        System.out.println(class); 
                           ^
ERROR!
/tmp/SRtqVvGud1/Main.java:4: error: <identifier> expected
        System.out.println(class); 
                                ^
5 errors


Correct Code :public class Main { 
    public static void main(String[] args) { 
        int classValue = 10;  // Renamed variable
        System.out.println(classValue); 
    } 
}





 
Snippet 10:  
public class Main { 
    public void display() { 
        System.out.println("No parameters"); 
    } 
    public void display(int num) { 
        System.out.println("With parameter: " + num); 
    } 
    public static void main(String[] args) { 
        display(); 
        display(5); 
    } 
} 

ERROR!
/tmp/0GwRzxXBxW/Main.java:9: error: non-static method display() cannot be referenced from a static context
        display(); 
        ^
ERROR!
/tmp/0GwRzxXBxW/Main.java:10: error: non-static method display(int) cannot be referenced from a static context
        display(5); 
        ^
2 errors

Correct Code :???




Snippet 11:  
public class Main { 
    public static void main(String[] args) { 
        int[] arr = {1, 2, 3}; 
        System.out.println(arr[5]); 
    } 
} 
ERROR!
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 3
	at Main.main(Main.java:4)

Correct Code :public class Main { 
    public static void main(String[] args) { 
        int[] arr = {1, 2, 3}; 
        System.out.println(arr[2]); // we need to write any one array value from the above like 1,2,3
    } 
} 



 
 
 
Snippet 12:  
public class Main { 
    public static void main(String[] args) { 
        while (true) { 
            System.out.println("Infinite Loop"); 
        } 
    } 
} 
error : we are getting stuck in loop
Correct Code :
public class Main { 
    public static void main(String[] args) { 
        while (true) { 
            System.out.println("Infinite Loop"); 
            break; // Exits the loop immediately
        } 
    } 
} 



 
Snippet 13:  
public class Main { 
    public static void main(String[] args) { 
        String str = null; 
        System.out.println(str.length()); 
    } 
} 
ERROR!
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "String.length()" because "<local1>" is null
	at Main.main(Main.java:4)

Correct Code : not got


 
Snippet 14:  
public class Main { 
    public static void main(String[] args) { 
        double num = "Hello"; 
        System.out.println(num); 
    } 
} 
error: incompatible types: String cannot be converted to double
        double num = "Hello"; 
                     ^
1 error
Correct Code :public class Main { 
    public static void main(String[] args) { 
        double num = 10.5;  // Assign a valid double value
        System.out.println(num); 
    } 
}




 
Snippet 15:  
public class Main { 
    public static void main(String[] args) { 
        int num1 = 10; 
        double num2 = 5.5; 
        int result = num1 + num2; 
        System.out.println(result); 
    } 
} 
error: incompatible types: possible lossy conversion from double to int
        int result = num1 + num2; 
                          ^
1 error
Correct Code :
public class Main { 
    public static void main(String[] args) { 
        int num1 = 10; 
        double num2 = 5.5; 
        double result = num1 + num2;  // Store result as double
        System.out.println(result); 
    } 
}


 
 
 
Snippet 16:  
public class Main { 
    public static void main(String[] args) { 
        int num = 10; 
        double result = num / 4; 
        System.out.println(result); 
    } 
} 
Correct Code :code is write we get output 2.0


Snippet 17:  
public class Main { 
    public static void main(String[] args) { 
        int a = 10; 
        int b = 5; 
        int result = a ** b; 
        System.out.println(result); 
    } 
} 
error: illegal start of expression
        int result = a ** b; 
                        ^
1 error
Correct Code :public class Main { 
    public static void main(String[] args) { 
        int a = 10; 
        int b = 5; 
        int result = a * b; //* 
        System.out.println(result); 
    } 
} 




 
Snippet 18:  
public class Main { 
    public static void main(String[] args) { 
        int a = 10; 
        int b = 5; 
        int result = a + b * 2; 
        System.out.println(result); 
    } 
} 
Correct Code : code are right we get output 20



 
Snippet 19:  
public class Main { 
    public static void main(String[] args) { 
        int a = 10; 
        int b = 0; 
        int result = a / b; 
        System.out.println(result); 
    } 
} 
ERROR!
Exception in thread "main" java.lang.ArithmeticException: / by zero
	at Main.main(Main.java:5)

Correct Code :
public class Main { 
    public static void main(String[] args) { 
        int a = 10; 
        int b = 2; // add number 
        int result = a / b; 
        System.out.println(result); 
    } 
} 



 
 
Snippet 20:  
public class Main { 
    public static void main(String[] args) { 
        System.out.println("Hello, World") 
    } 
} 
error: ';' expected
        System.out.println("Hello, World") 
                                          ^
1 error

Correct Code :
public class Main { 
    public static void main(String[] args) { 
        System.out.println("Hello, World") ;
    } 
} 





 
Snippet 21:  
public class Main { 
    public static void main(String[] args) { 
        System.out.println("Hello, World!"); 
    // Missing closing brace here 
} 
error: reached end of file while parsing
} 
 ^
1 error

Correct Code :
public class Main { 
    public static void main(String[] args) { 
        System.out.println("Hello, World!"); 
    // Missing closing brace here 
} 
}


 
Snippet 22:  
public class Main { 
    public static void main(String[] args) { 
        static void displayMessage() { 
            System.out.println("Message"); 
        } 
    } 
} 
 error: illegal start of expression
        static void displayMessage() { 
        ^
ERROR!
/tmp/UEW56l6Nvv/Main.java:7: error: class, interface, enum, or record expected
} 
^
2 errors
Correct Code :
public class Main { 
    public static void main(String[] args) { 
        displayMessage();  // Call the method
    } 
    
    // Define the static method outside the main method
    static void displayMessage() { 
        System.out.println("Message"); 
    } 
}



Snippet 23:  
public class Confusion { 
    public static void main(String[] args) { 
        int value = 2; 
        switch(value) { 
            case 1: 
                System.out.println("Value is 1"); 
            case 2: 
                System.out.println("Value is 2"); 
            case 3: 
                System.out.println("Value is 3"); 
            default: 
                System.out.println("Default case"); 
        } 
    } 
} 

error: class Confusion is public, should be declared in a file named Confusion.java
public class Confusion { 
       ^
1 error
Correct Code :public class Confusion { 
    public static void main(String[] args) { 
        int value = 2; 
        switch(value) { 
            case 1: 
                System.out.println("Value is 1"); 
            case 2: 
                System.out.println("Value is 2"); 
            case 3: 
                System.out.println("Value is 3"); 
            default: 
                System.out.println("Default case"); 
        } 
    } 
} 




 
Snippet 24:  
public class MissingBreakCase { 
    public static void main(String[] args) { 
        int level = 1; 
        switch(level) { 
            case 1: 
                System.out.println("Level 1"); 
            case 2: 
                System.out.println("Level 2"); 
            case 3: 
                System.out.println("Level 3"); 
            default: 
                System.out.println("Unknown level"); 
        } 
    } 
} 
Correct Code : code are correct
we get output
Level 1
Level 2
Level 3
Unknown level





Snippet 25:  
public class Switch { 
    public static void main(String[] args) { 
        double score = 85.0; 
        switch(score) { 
            case 100: 
                System.out.println("Perfect score!"); 
                break; 
            case 85: 
                System.out.println("Great job!"); 
                break; 
            default: 
                System.out.println("Keep trying!"); 
        } 
    } 
} 
ERROR!
/tmp/5nQrlJPWVl/Main.java:1: error: class Switch is public, should be declared in a file named Switch.java
public class Switch { 
       ^
ERROR!
/tmp/5nQrlJPWVl/Main.java:4: error: selector type double is not allowed
        switch(score) { 
              ^
2 errors
Correct Code :
public class Switch { 
    public static void main(String[] args) { 
        int score = 85; //used int we can't use switch statement in double 
        switch(score) { 
            case 100: 
                System.out.println("Perfect score!"); 
                break; 
            case 85: 
                System.out.println("Great job!"); 
                break; 
            default: 
                System.out.println("Keep trying!"); 
        } 
    } 
} 



 
Snippet 26:  
public class Switch { 
    public static void main(String[] args) { 
        int number = 5; 
        switch(number) { 
            case 5: 
                System.out.println("Number is 5"); 
 
 
                break; 
            case 5: 
                System.out.println("This is another case 5"); 
                break; 
            default: 
                System.out.println("This is the default case"); 
        } 
    } 
} 
 error: class Switch is public, should be declared in a file named Switch.java
public class Switch { 
       ^
ERROR!
/tmp/j93vzby3ko/Main.java:10: error: duplicate case label
            case 5: 
            ^
2 errors

Correct Code :
public class Switch { 
    public static void main(String[] args) { 
        int number = 5; 
        switch(number) { 
            case 5: 
                System.out.println("Number is 5"); 
 
 
                break; 
            case 6: // write the different case name
                System.out.println("This is another case 5"); 
                break; 
            default: 
                System.out.println("This is the default case"); 
        } 
    } 
} 












